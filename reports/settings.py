from bd.model import Session, Documents, Products

name = "üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚û°Ô∏è".upper()
desc = ""
mime = "text"


class ReportsSettingsInput:
    """
    –ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞
    """

    name = "–í—ã–±–µ—Ä–µ—Ç–µ".upper()
    desc = "–í—ã–±–µ—Ä–µ—Ç–µ".upper()
    type = "SELECT"

    def get_options(self, session: Session):
        output = [
            {"id": "clear_db", "name": "–û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö ‚û°Ô∏è".upper()},
        ]
        return output


class ReportsClearDbInput:
    """
    –ú–µ–Ω—é –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    """

    name = "–í—ã–±–µ—Ä–µ—Ç–µ".upper()
    desc = "–í—ã–±–µ—Ä–µ—Ç–µ".upper()
    type = "SELECT"

    def get_options(self, session: Session):
        output = [
            {"id": "clear_db_documents", "name": "üìë –û—á–∏—Å—Ç–∏—Ç—å (–î–æ–∫—É–º–µ–Ω—Ç—ã) ‚û°Ô∏è".upper()},
            {"id": "clear_db_products", "name": "üõí –û—á–∏—Å—Ç–∏—Ç—å (–ü—Ä–æ–¥—É–∫—Ç—ã) ‚û°Ô∏è".upper()},
        ]
        return output


def get_inputs(session: Session):
    # –ï—Å–ª–∏ –≤—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–µ—Å—Å–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    if session.params["inputs"]["0"]:
        # –ï—Å–ª–∏ —Ç–∏–ø –æ—Ç—á–µ—Ç–∞ - "shift_opening_report"
        if session.params["inputs"]["0"]["report"] == "clear_db":
            return {"clear": ReportsClearDbInput}

    else:
        return {
            "report": ReportsSettingsInput,
        }


def generate(session: Session):
    params = {}
    collection = {
        "clear_db_documents": Documents,
        "clear_db_products": Products,
    }
    clear_collection_name = session.params["inputs"]["0"]["clear"]

    clear_collection = collection[clear_collection_name]

    clear_collection.drop_collection()

    return [{"–ö–æ–ª–ª–µ–∫—Ü–∏—è": "–û—á–∏—â–µ–Ω–∞"}]
